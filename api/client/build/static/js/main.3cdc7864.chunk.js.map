{"version":3,"sources":["assets/landingPage.jpeg","store/actions/actionTypes.js","store/actions/authActions.js","components/NavBar.js","store/actions/fetchActions.js","components/DashBoard.js","components/SearchBox.js","store/actions/dataActions.js","components/CardPhoto.js","components/Spinner.js","components/InfinitePhotos.js","components/RecentSearches.js","components/Photos.js","components/Landing.js","components/Login.js","components/PrivateRoute.js","App.js","store/reducers/auth.js","store/reducers/data.js","api/index.js","store/sagas/auth.js","store/sagas/data.js","store/sagas/index.js","storeSetup.js","serviceWorker.js","index.js"],"names":["module","exports","LOGIN_START","FETCH_PHOTOS_START","FETCH_PHOTOS_SCROLL","SAVE_PHOTOS_START","FETCH_COLLECTION_START","loginOkay","userInfo","type","withRouter","connect","state","isAuth","auth","dispatch","logout","props","location","Menu","style","marginBottom","size","stackable","position","Item","alt","src","name","as","Link","to","active","pathname","onClick","window","confirm","fetchCollectionOkay","data","fetchStart","keyword","actionType","fetchOkay","fetchScrollOkay","collection","getCollection","useEffect","photoCollection","map","photo","index","Grid","Column","key","Segment","Image","pictureUrl","marginTop","Container","textAlign","length","color","className","fetchPhotos","useState","setKeyWord","Input","icon","Icon","e","inverted","circular","link","onChange","target","value","placeholder","savePhotosOkay","CardPhoto","imageUrl","id","showCheck","savePhoto","Card","margin","wrapped","ui","Content","Header","Button","basic","marginLeft","Spinner","Dimmer","Loader","photoData","keywords","loading","scrollMorePhotos","fetchUpdate","save","photos","savePhotos","setPhotos","savePhotoHandler","findIndex","element","newPhotos","filter","currentPhoto","alert","animated","hidden","visible","dataLength","next","hasMore","loader","show","some","photoId","photoUrl","display","justifyContent","alignItems","Label","cursor","minHeight","Landing","landingStyle","backgroundImage","LandingPhoto","backgroundPosition","backgroundRepeat","backgroundSize","transform","fontSize","loginStart","login","email","password","form","setValue","useForm","handleChange","resetFields","height","Form","onSubmit","preventDefault","Group","label","content","Component","component","rest","render","App","exact","path","Login","Photos","DashBoard","initialState","error","reducer","action","localStorage","removeItem","searchResults","loadData","saveData","LoginSagaWorker","AuthSagaWatcher","token","axios","post","API","result","setItem","put","console","log","takeEvery","DataSagaWorker","CollectionSagaWorker","SaveDataSagaWorker","DataSagaWatcher","getId","getItem","headers","Authorization","method","url","transformData","urls","regular","message","select","rootSaga","all","authSaga","dataSaga","composeEnhancers","compose","rootReducer","combineReducers","authReducer","dataReducer","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","Boolean","hostname","match","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3cdc7864.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landingPage.0e253562.jpeg\";","export const LOGIN_START = \"LOGIN_START\";\nexport const LOGIN_OKAY = \"LOGIN_OKAY\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\n\nexport const FETCH_PHOTOS_START = \"FETCH_PHOTOS_START\";\nexport const FETCH_PHOTOS_OKAY = \"FETCH_PHOTOS_OKAY\";\nexport const FETCH_PHOTOS_FAIL = \"FETCH_PHOTOS_FAIL\";\n\nexport const FETCH_PHOTOS_SCROLL = \"FETCH_PHOTOS_SCROLL\";\nexport const FETCH_PHOTOS_SCROLL_OKAY = \"FETCH_PHOTOS_SCROLL_OKAY\";\n\nexport const SAVE_PHOTOS_START = \"SAVE_PHOTOS_START\";\nexport const SAVE_PHOTOS_OKAY = \"SAVE_PHOTOS_OKAY\";\nexport const SAVE_PHOTOS_FAIL = \"SAVE_PHOTOS_FAIL\";\n\nexport const FETCH_COLLECTION_START = \"FETCH_COLLECTION_START\";\nexport const FETCH_COLLECTION_OKAY = \"FETCH_COLLECTION_OKAY\";\nexport const FETCH_COLLECTION_FAIL = \"FETCH_COLLECTION_FAIL\";\n\nexport const LOGOUT = \"LOGOUT\";\nexport const PENDING_SAVE = \"PENDING_SAVE\";\n","import * as actionType from \"./actionTypes\";\n\nexport const login = userInfo => ({ type: actionType.LOGIN_START, userInfo });\nexport const loginOkay = userInfo => ({\n  type: actionType.LOGIN_OKAY,\n  userInfo\n});\nexport const loginFail = errorMsg => ({\n  type: actionType.LOGIN_FAIL,\n  errorMsg\n});\nexport const logout = () => ({ type: actionType.LOGOUT });\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Menu } from \"semantic-ui-react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { logout } from \"../store/actions/authActions\";\n\nconst NavBar = props => {\n  const { location, isAuth } = props;\n  const handleLogout = () => {\n    if (window.confirm(\"Are you logging out?\")) {\n      props.logout();\n    }\n  };\n  return (\n    <Menu style={{ marginBottom: \"0\" }} size=\"large\" stackable position=\"right\">\n      <Menu.Item>\n        <img alt=\"app logo\" src=\"https://react.semantic-ui.com/logo.png\" />\n      </Menu.Item>\n      <Menu.Menu position=\"right\">\n        {isAuth ? null : (\n          <Menu.Item\n            name=\"login\"\n            as={Link}\n            to=\"/login\"\n            active={location.pathname === \"/login\"}\n          >\n            Login\n          </Menu.Item>\n        )}\n        {isAuth ? (\n          <Menu.Item onClick={handleLogout} name=\"logout\">\n            Logout\n          </Menu.Item>\n        ) : null}\n\n        {isAuth ? (\n          <Menu.Item\n            name=\"dashboard\"\n            as={Link}\n            to=\"/dashboard\"\n            active={location.pathname === \"/dashboard\"}\n            // active={activeItem === \"testimonials\"}\n          >\n            Dashboard\n          </Menu.Item>\n        ) : null}\n\n        {isAuth ? (\n          <Menu.Item\n            name=\"photos\"\n            as={Link}\n            to=\"/photos\"\n            active={location.pathname === \"/photos\"}\n            // active={activeItem === \"sign-in\"}\n          >\n            Photos\n          </Menu.Item>\n        ) : null}\n      </Menu.Menu>\n    </Menu>\n  );\n};\nNavBar.propTypes = {\n  location: PropTypes.objectOf(PropTypes.string).isRequired,\n  isAuth: PropTypes.bool.isRequired,\n  logout: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth\n});\nconst mapDispatchToProps = dispatch => ({\n  logout: () => dispatch(logout())\n});\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(NavBar));\n","import * as actionType from \"./actionTypes\";\n\nexport const fetchCollectionStart = () => ({\n  type: actionType.FETCH_COLLECTION_START\n});\nexport const fetchCollectionOkay = data => ({\n  type: actionType.FETCH_COLLECTION_OKAY,\n  data\n});\nexport const fetchCollectionFail = err => ({\n  type: actionType.FETCH_COLLECTION_FAIL,\n  err\n});\nexport const fetchStart = keyword => ({\n  type: actionType.FETCH_PHOTOS_START,\n  keyword\n});\nexport const fetchUpdate = keyword => ({\n  type: actionType.FETCH_PHOTOS_SCROLL,\n  keyword\n});\nexport const fetchOkay = data => ({ type: actionType.FETCH_PHOTOS_OKAY, data });\nexport const fetchScrollOkay = data => ({\n  type: actionType.FETCH_PHOTOS_SCROLL_OKAY,\n  data\n});\nexport const fetchFail = err => ({ type: actionType.FETCH_PHOTOS_FAIL, err });\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Grid, Image, Segment, Container } from \"semantic-ui-react\";\n\nimport { fetchCollectionStart } from \"../store/actions/fetchActions\";\n\nconst DashBoard = ({ getCollection, collection }) => {\n  useEffect(() => {\n    getCollection();\n  }, []);\n  const photoCollection = collection.map((photo, index) => {\n    return (\n      <Grid.Column key={index}>\n        <Segment>\n          <Image src={photo.pictureUrl} />\n        </Segment>\n      </Grid.Column>\n    );\n  });\n\n  return (\n    <div style={{ marginTop: \"2rem\" }}>\n      <Container>\n        <h1 style={{ textAlign: \"center\" }}>Saved Collection</h1>\n        {collection.length === 0 ? (\n          <h2 style={{ textAlign: \"center\", color: \"red\" }}>\n            You have no photos saved\n          </h2>\n        ) : (\n          <div className=\"ui stackable two column grid\">{photoCollection}</div>\n        )}\n      </Container>\n    </div>\n  );\n};\nDashBoard.propTypes = {\n  getCollection: PropTypes.func.isRequired,\n  collection: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nconst mapDispatchToProps = dispatch => ({\n  getCollection: () => dispatch(fetchCollectionStart())\n});\nconst mapStateToProps = state => ({\n  collection: state.data.collection\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(DashBoard);\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Input, Icon } from \"semantic-ui-react\";\nimport { fetchStart } from \"../store/actions/fetchActions\";\n\nconst SearchBox = ({ fetchPhotos }) => {\n  const [keyword, setKeyWord] = useState(\"\");\n  const handleChange = e => {\n    setKeyWord(e.target.value);\n  };\n  const handleSearchClick = e => {\n    fetchPhotos(keyword);\n  };\n  return (\n    <Input\n      icon={\n        <Icon\n          onClick={handleSearchClick}\n          name=\"search\"\n          inverted\n          circular\n          link\n        />\n      }\n      onChange={handleChange}\n      value={keyword}\n      placeholder=\"Search...\"\n    />\n  );\n};\nSearchBox.propTypes = {\n  fetchPhotos: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = dispatch => ({\n  fetchPhotos: keyword => dispatch(fetchStart(keyword))\n});\nexport default connect(null, mapDispatchToProps)(SearchBox);\n","import * as actionType from \"./actionTypes\";\n\nexport const savePhotos = photos => ({\n  type: actionType.SAVE_PHOTOS_START,\n  photos\n});\n\nexport const savePhotosOkay = () => ({ type: actionType.SAVE_PHOTOS_OKAY });\nexport const savePhotosFail = err => ({\n  type: actionType.SAVE_PHOTOS_FAIL,\n  err\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Card, Icon, Image, Button } from \"semantic-ui-react\";\n\nconst CardPhoto = ({ imageUrl, id, showCheck, savePhoto }) => (\n  <Card style={{ margin: \"0 auto\" }}>\n    <Image src={imageUrl} wrapped ui={false} />\n    <Card.Content>\n      <Card.Header>Photo id: {id}</Card.Header>\n      <Button onClick={() => savePhoto(imageUrl, id)} basic color=\"green\">\n        Save Photo\n      </Button>\n      {showCheck ? (\n        <Icon style={{ marginLeft: \"2rem\" }} name=\"checkmark\" />\n      ) : null}\n    </Card.Content>\n  </Card>\n);\nCardPhoto.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n\n  savePhoto: PropTypes.func.isRequired,\n  showCheck: PropTypes.bool.isRequired\n};\n\nexport default CardPhoto;\n","import React from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\nconst Spinner = () => {\n  return (\n    <div>\n      <Dimmer active inverted>\n        <Loader size=\"large\" />\n      </Dimmer>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { Grid, Button, Icon } from \"semantic-ui-react\";\nimport { fetchUpdate } from \"../store/actions/fetchActions\";\nimport { savePhotos } from \"../store/actions/dataActions\";\nimport CardPhoto from \"./CardPhoto\";\nimport Spinner from \"./Spinner\";\n\nconst InfinitePhotos = ({\n  photoData,\n  keywords,\n  scrollMorePhotos,\n  save,\n  loading\n}) => {\n  const [photos, setPhotos] = useState([]);\n\n  const fetchMoreData = () => {\n    if (keywords.length === 0) {\n      return;\n    }\n    scrollMorePhotos(keywords[keywords.length - 1]);\n  };\n  const savePhotoHandler = (imageUrl, id) => {\n    const photo = photos.findIndex(element => element.id === id);\n    if (photo === -1) {\n      setPhotos([...photos, { imageUrl, id }]);\n    } else {\n      let newPhotos = [];\n      newPhotos = [...photos];\n      newPhotos = newPhotos.filter(currentPhoto => currentPhoto.id !== id);\n\n      setPhotos([...newPhotos]);\n    }\n  };\n  const submitPhotosHandler = () => {\n    if (photos.length === 0) {\n      alert(\"No photos selected\");\n      return;\n    }\n    save(photos);\n    setPhotos([]);\n  };\n\n  return (\n    <div style={{ marginTop: \"3rem\" }}>\n      {photos.length !== 0 ? (\n        <Grid>\n          <Grid.Column textAlign=\"center\">\n            <Button onClick={submitPhotosHandler} animated=\"vertical\">\n              <Button.Content hidden>Save</Button.Content>\n              <Button.Content visible>\n                <Icon size=\"large\" name=\"save outline\" />\n              </Button.Content>\n            </Button>\n          </Grid.Column>\n        </Grid>\n      ) : null}\n      <InfiniteScroll\n        dataLength={photoData.length}\n        next={fetchMoreData}\n        hasMore\n        loader={loading ? <Spinner /> : null}\n        className=\"ui stackable two column grid\"\n      >\n        {photoData.map((photo, index) => {\n          let show = false;\n          // show if the photos in in the saved array\n\n          if (photos.some(element => element.id === photo.photoId)) {\n            show = true;\n          }\n\n          return (\n            <Grid.Column key={photo.photoId + index}>\n              <CardPhoto\n                showCheck={show}\n                savePhoto={savePhotoHandler}\n                id={photo.photoId}\n                imageUrl={photo.photoUrl}\n              />\n            </Grid.Column>\n          );\n        })}\n      </InfiniteScroll>\n    </div>\n  );\n};\nInfinitePhotos.propTypes = {\n  photoData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  keywords: PropTypes.arrayOf(PropTypes.string).isRequired,\n  scrollMorePhotos: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  save: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  photoData: state.data.data,\n  keywords: state.data.keywords,\n  loading: state.data.loading\n});\nconst mapDispatchToProps = dispatch => {\n  return {\n    scrollMorePhotos: keyword => dispatch(fetchUpdate(keyword)),\n    save: photos => dispatch(savePhotos(photos))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InfinitePhotos);\n","import React from \"react\";\nimport { Label } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchStart } from \"../store/actions/fetchActions\";\n\nconst RecentSearches = ({ keywords, fetchPhotos }) => {\n  return (\n    <div\n      style={{\n        marginTop: \"1.5rem\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      {keywords.map(key => (\n        <Label\n          style={{ cursor: \"pointer\" }}\n          onClick={() => fetchPhotos(key)}\n          color=\"blue\"\n          key={key}\n        >\n          {key}\n        </Label>\n      ))}\n    </div>\n  );\n};\nRecentSearches.propTypes = {\n  keywords: PropTypes.arrayOf(PropTypes.string).isRequired,\n  fetchPhotos: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  keywords: state.auth.keywords\n});\nconst mapDispatchToProps = dispatch => ({\n  fetchPhotos: key => dispatch(fetchStart(key))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(RecentSearches);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container } from \"semantic-ui-react\";\nimport PropTypes from \"prop-types\";\nimport SearchBox from \"./SearchBox\";\nimport InfinitePhotos from \"./InfinitePhotos\";\nimport RecentSearches from \"./RecentSearches\";\nimport Spinner from \"./Spinner\";\n\nconst Photos = ({ loading }) => {\n  return (\n    <Container>\n      <div\n        style={{ marginTop: \"2rem\", display: \"flex\", justifyContent: \"center\" }}\n      >\n        <SearchBox />\n      </div>\n      <div>\n        <RecentSearches />\n      </div>\n      {loading ? <Spinner /> : null}\n      <div style={{ marginTop: \"2rem\", minHeight: \"700px\" }}>\n        <InfinitePhotos />\n      </div>\n    </Container>\n  );\n};\nPhotos.propTypes = {\n  loading: PropTypes.bool.isRequired\n};\nconst mapStateToProps = state => ({\n  loading: state.data.loading\n});\nexport default connect(mapStateToProps)(Photos);\n","import React from \"react\";\nimport LandingPhoto from \"../assets/landingPage.jpeg\";\n\nconst Landing = props => {\n  const landingStyle = {\n    backgroundImage: `url(${LandingPhoto})`,\n    minHeight: \"100vh\",\n    backgroundPosition: \"center\" /* Center the image */,\n    backgroundRepeat: \"no-repeat\" /* Do not repeat the image */,\n    backgroundSize: \"cover\"\n  };\n  const headingStyle = {\n    textAlign: \"center\",\n    transform: \"translateY(4.5rem)\",\n    color: \"green\",\n    fontSize: \"4rem\"\n  };\n  return (\n    <div style={landingStyle}>\n      <h1 style={headingStyle}>Photo Paradise</h1>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Form } from \"semantic-ui-react\";\nimport { login } from \"../store/actions/authActions\";\n\nconst useForm = () => {\n  const [form, setValue] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleChange = e => {\n    setValue({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const resetFields = () => {\n    setValue({\n      ...form,\n      email: \"\",\n      password: \"\"\n    });\n  };\n\n  return [form, handleChange, resetFields];\n};\nconst Login = ({ isAuth, loginStart }) => {\n  const [form, handleChange, resetFields] = useForm();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    loginStart(form);\n    resetFields();\n  };\n  if (isAuth) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n  return (\n    <div\n      style={{\n        height: \"60vh\",\n\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Input\n            placeholder=\"Email\"\n            name=\"email\"\n            label=\"Email\"\n            value={form.email}\n            onChange={handleChange}\n          />\n          <Form.Input\n            placeholder=\"Password\"\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            value={form.password}\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Button content=\"Submit\" />\n      </Form>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  loginStart: PropTypes.func.isRequired,\n  isAuth: PropTypes.bool.isRequired\n};\nconst mapStateToProps = state => ({ isAuth: state.auth.isAuth });\nconst mapDispatchToProps = dispatch => ({\n  loginStart: userInfo => dispatch(login(userInfo))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        rest.isAuth ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  component: PropTypes.elementType.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport NavBar from \"./components/NavBar\";\nimport DashBoard from \"./components/DashBoard\";\nimport Photos from \"./components/Photos\";\nimport Landing from \"./components/Landing\";\nimport Login from \"./components/Login\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nfunction App() {\n  return (\n    <main>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Landing} />\n        <Route path=\"/login\" component={Login} />\n        <PrivateRoute path=\"/photos\" component={Photos} />\n        <PrivateRoute path=\"/dashboard\" component={DashBoard} />\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","import * as actionType from \"../actions/actionTypes\";\n\nconst initialState = {\n  isAuth: false,\n  userInfo: null,\n  loading: false,\n  error: \"\",\n  keywords: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.LOGOUT:\n      localStorage.removeItem(\"dockerPhotos\");\n      return {\n        ...state,\n        isAuth: false,\n        userInfo: null,\n        keywords: []\n      };\n    case actionType.LOGIN_START:\n      return {\n        ...state,\n        loading: true\n      };\n    case actionType.LOGIN_OKAY:\n      return {\n        ...state,\n        loading: false,\n        isAuth: true,\n        keywords: [...action.userInfo.searchResults],\n        userInfo: {\n          ...state.userInfo,\n          ...action.userInfo\n        }\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionType from \"../actions/actionTypes\";\n\nconst initialState = {\n  keywords: [],\n  data: [],\n\n  collection: [],\n  loading: true,\n  error: \"\"\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.LOGOUT:\n      return {\n        ...state,\n        collection: [],\n        data: [],\n        keywords: []\n      };\n    case actionType.FETCH_COLLECTION_START:\n    case actionType.FETCH_PHOTOS_SCROLL:\n      return {\n        ...state,\n        loading: true\n      };\n    case actionType.FETCH_COLLECTION_OKAY:\n      return {\n        ...state,\n        loading: false,\n        collection: [...action.data]\n      };\n    case actionType.SAVE_PHOTOS_START:\n      return {\n        ...state,\n        loading: true\n      };\n    case actionType.SAVE_PHOTOS_OKAY:\n      return {\n        ...state,\n        loading: false\n      };\n    case actionType.FETCH_PHOTOS_START:\n      return {\n        ...state,\n        keywords: [...state.keywords, action.keyword],\n        loading: true\n      };\n    case actionType.FETCH_PHOTOS_SCROLL_OKAY:\n      return {\n        ...state,\n        data: [...state.data, ...action.data],\n        loading: false\n      };\n    case actionType.FETCH_PHOTOS_OKAY:\n      return {\n        ...state,\n        data: [...action.data],\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export default {\n  login: \"http://localhost:3050/api/auth/login\",\n  loadData: \"http://localhost:3050/api/data/photos?keywords=\",\n  saveData: \"http://localhost:3050/api/data/photos\",\n  collection: \"http://localhost:3050/api/data/collections\"\n};\n","import { takeEvery, put } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport * as actionType from \"../actions/actionTypes\";\nimport { loginFail, loginOkay } from \"../actions/authActions\";\nimport API from \"../../api\";\n\nfunction* LoginSagaWorker(action) {\n  const { email, password } = action.userInfo;\n  let token = null;\n  let userInfo = null;\n  try {\n    const result = yield axios.post(API.login, { email, password });\n    token = result.data.token;\n    userInfo = result.data.userInfo;\n    yield localStorage.setItem(\"dockerPhotos\", token);\n    yield put(loginOkay(userInfo));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* AuthSagaWatcher() {\n  yield takeEvery(actionType.LOGIN_START, LoginSagaWorker);\n}\n","import { takeEvery, put, select } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport * as actionType from \"../actions/actionTypes\";\nimport {\n  fetchOkay,\n  fetchFail,\n  fetchScrollOkay,\n  fetchCollectionOkay,\n  fetchCollectionFail\n} from \"../actions/fetchActions\";\nimport { savePhotosOkay } from \"../actions/dataActions\";\nimport API from \"../../api\";\n\nconst getId = state => state.auth.userInfo.id;\n\nfunction* DataSagaWorker(action) {\n  const token = yield localStorage.getItem(\"dockerPhotos\");\n  try {\n    const result = yield axios({\n      headers: { Authorization: `bearer ${token}` },\n      method: \"get\",\n      url: `${API.loadData}${action.keyword}`\n    });\n    const transformData = result.data.result.map(photo => {\n      return {\n        photoId: photo.id,\n        photoUrl: photo.urls.regular\n      };\n    });\n    if (action.type === actionType.FETCH_PHOTOS_START) {\n      yield put(fetchOkay(transformData));\n    } else {\n      yield put(fetchScrollOkay(transformData));\n    }\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nfunction* CollectionSagaWorker(action) {\n  const token = yield localStorage.getItem(\"dockerPhotos\");\n\n  try {\n    const result = yield axios({\n      headers: { Authorization: `bearer ${token}` },\n      method: \"get\",\n      url: `${API.collection}`\n    });\n\n    yield put(fetchCollectionOkay(result.data.data));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* SaveDataSagaWorker(action) {\n  const id = yield select(getId);\n  const { photos } = action;\n  const token = yield localStorage.getItem(\"dockerPhotos\");\n\n  try {\n    const result = yield axios({\n      headers: { Authorization: `bearer ${token}` },\n      method: \"post\",\n      url: `${API.saveData}`,\n      data: {\n        photos,\n        id\n      }\n    });\n    yield put(savePhotosOkay());\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport default function* DataSagaWatcher() {\n  yield takeEvery(actionType.FETCH_PHOTOS_START, DataSagaWorker);\n  yield takeEvery(actionType.FETCH_PHOTOS_SCROLL, DataSagaWorker);\n  yield takeEvery(actionType.SAVE_PHOTOS_START, SaveDataSagaWorker);\n  yield takeEvery(actionType.FETCH_COLLECTION_START, CollectionSagaWorker);\n}\n","import { all } from \"redux-saga/effects\";\nimport authSaga from \"./auth\";\nimport dataSaga from \"./data\";\n\nexport default function* rootSaga() {\n  yield all([authSaga(), dataSaga()]);\n}\n","import { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport authReducer from \"./store/reducers/auth\";\nimport dataReducer from \"./store/reducers/data\";\n// import errorReducer from \"./store/reducers/error\";\nimport rootSaga from \"./store/sagas\";\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  data: dataReducer\n  // error: errorReducer\n});\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(rootSaga);\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./storeSetup\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst app = (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}